name: Build Repo Listing

env:
  listPublishDirectory: Website
  pathToCi: ci
  
on: 
  workflow_dispatch:  # 手动触发
  push:
    branches: main
    paths: source.json  # 当 source.json 变更时触发
  workflow_run:
    workflows: [Build Release]
    types:
      - completed  # 当 Build Release 工作流完成时触发
  release:
    types: [published, created, edited, unpublished, deleted, released]  # 发布相关事件触发

permissions:
  contents: read
  pages: write
  id-token: write
  
concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-listing:
    name: build-listing
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Local Repository
        uses: actions/checkout@v4  # 检出当前仓库

      - name: Checkout Automation Repository
        uses: actions/checkout@v4  # 检出自动化工具仓库
        with:
          repository: vrchat-community/package-list-action
          path: ${{ env.pathToCi }}
          clean: false  # 保留本地仓库文件

      - name: Restore Cache
        uses: actions/cache@v4
        with:
          path: |
            ${{ env.pathToCi }}/.nuke/temp
            ~/.nuget/packages
          key: ${{ runner.os }}-${{ hashFiles('**/global.json', '**/*.csproj') }}
      
      - name: Build Multi-Package Listing (from source.json)
        run: |
          ${{ env.pathToCi }}/build.cmd BuildMultiPackageListing \
            --root ${{ env.pathToCi }} \
            --list-publish-directory $GITHUB_WORKSPACE/${{ env.listPublishDirectory }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Package Version Listing for All Packages
        run: |
          IFS=',' read -ra packages <<< "${{ vars.PACKAGE_NAME }}"
          
          mkdir -p $GITHUB_WORKSPACE/${{ env.listPublishDirectory }}
          
          for package in "${packages[@]}"; do
            echo "Generating listing for package: $package"
            ${{ env.pathToCi }}/build.cmd BuildRepoListing \
              --root ${{ env.pathToCi }} \
              --list-publish-directory $GITHUB_WORKSPACE/${{ env.listPublishDirectory }} \
              --current-package-name "$package"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Pages
        uses: actions/configure-pages@v5
      
      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ env.listPublishDirectory }}
      
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4